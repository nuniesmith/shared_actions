name: Tailscale Deployment

on: [push]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Tailscale
      uses: tailscale/github-action@v3
      with:
        oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
        oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
        tags: tag:ci  # Replace with your chosen tags

    - name: Install jq
      run: sudo apt-get update && sudo apt-get install -y jq

    - name: Get Tailscale access token
      id: get_token
      run: |
        TOKEN=$(curl -s -X POST https://api.tailscale.com/oauth/token \
          -d "grant_type=client_credentials" \
          -d "client_id=${{ secrets.TS_OAUTH_CLIENT_ID }}" \
          -d "client_secret=${{ secrets.TS_OAUTH_SECRET }}" | jq -r .access_token)
        echo "TOKEN=$TOKEN" >> $GITHUB_ENV

    - name: List devices
      id: list_devices
      run: |
        curl -s -X GET https://api.tailscale.com/api/v2/tailnet/${{ secrets.TAILSCALE_TAILNET }}/devices \
          -H "Authorization: Bearer $TOKEN" > devices.json
        cat devices.json

    - name: Delete old devices
      run: |
        # Example: Delete a device by ID (replace with your logic to identify old devices)
        DEVICE_ID=$(jq -r '.devices[] | select(.hostname == "old-server") | .id' devices.json)
        if [ -n "$DEVICE_ID" ]; then
          curl -s -X DELETE https://api.tailscale.com/api/v2/device/$DEVICE_ID \
            -H "Authorization: Bearer $TOKEN"
        fi

    - name: Copy IP addresses
      run: |
        # Example: Extract and output IP addresses
        jq -r '.devices[] | .addresses[]' devices.json > ip_addresses.txt
        cat ip_addresses.txt